# https://docs.github.com/en/actions

name: "Integrate"

on: # yamllint disable-line rule:truthy
  pull_request: null
  push:
    branches:
      - "master"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        php-version:
          - "5.4"

        dependencies:
          - "locked"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          coverage: "none"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Validate composer.json and composer.lock"
        run: "composer validate --strict"

      - name: "Determine composer cache directory"
        uses: "./.github/actions/composer/composer/determine-cache-directory"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ env.COMPOSER_CACHE_DIR }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

      - name: "Install ${{ matrix.dependencies }} dependencies with composer"
        uses: "./.github/actions/composer/composer/install"
        with:
          dependencies: "${{ matrix.dependencies }}"

      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcbf"

  merge:
    name: "Merge"

    runs-on: "ubuntu-latest"

    needs:
      - "coding-standards"

    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false && (
        github.event.action == 'opened' ||
        github.event.action == 'reopened' ||
        github.event.action == 'synchronize'
      ) && (
        github.actor == 'localheinz' ||
        github.actor == 'shrikeh'
      )

    steps:
      - name: "Merge pull request"
        uses: "actions/github-script@v3.0.0"
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            await github.pulls.merge({
              merge_method: "merge",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })
